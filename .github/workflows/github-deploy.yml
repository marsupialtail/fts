name: Build and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04,  macos-11]

    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y -V ca-certificates lsb-release wget
          wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt update
          sudo apt install -y -V libarrow-dev # For C++
          sudo apt install -y -V libarrow-glib-dev # For GLib (C)
          sudo apt install -y -V libarrow-dataset-dev # For Apache Arrow Dataset C++
          sudo apt install -y -V libarrow-dataset-glib-dev # For Apache Arrow Dataset GLib (C)
          sudo apt install -y -V libarrow-acero-dev # For Apache Arrow Acero
          sudo apt install -y -V libarrow-flight-dev # For Apache Arrow Flight C++
          sudo apt install -y -V libarrow-flight-glib-dev # For Apache Arrow Flight GLib (C)
          sudo apt install -y -V libarrow-flight-sql-dev # For Apache Arrow Flight SQL C++
          sudo apt install -y -V libarrow-flight-sql-glib-dev # For Apache Arrow Flight SQL GLib (C)
          sudo apt install -y -V libgandiva-dev # For Gandiva C++
          sudo apt install -y -V libgandiva-glib-dev # For Gandiva GLib (C)
          sudo apt install -y -V libparquet-dev # For Apache Parquet C++
          sudo apt install -y -V libparquet-glib-dev # For Apache Parquet GLib (C)
          
          sudo apt install -y glog-dev make cmake gcc-c++ unzip zlib-dev openssl-dev libzstd-dev snappy-dev lz4-dev libcurl4-openssl-dev
          
          git clone https://github.com/aws/aws-sdk-cpp.git
          cd aws-sdk-cpp/
          git submodule update --init --recursive
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE="Release" -DCMAKE_PREFIX_PATH=/usr/local/ -DCMAKE_INSTALL_PREFIX=/usr/local/ -DBUILD_ONLY='s3' -DENABLE_TESTING=OFF ..
          make -j8
          make install
          cd ..
          cd ..
          
          git clone https://github.com/y-256/libdivsufsort.git
          cd libdivsufsort
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE="Release" -DCMAKE_PREFIX_PATH=/usr/local/ -DCMAKE_INSTALL_PREFIX=/usr/local/ ..
          make -j8
          make install
          cd ..
          cd ..


      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
